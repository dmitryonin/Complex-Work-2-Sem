INF = 10**12

print("Программа ищет кратчайший путь между двумя пунктами графа.\n")

K = int(input("Введите номер начальной вершины K: "))
M = int(input("Введите номер конечной вершины M: "))
N = int(input("Введите количество вершин графа N (1 ≤ N ≤ 100): "))

print("\nТеперь введите матрицу смежности графа (N строк по N чисел):")
print("Каждое число — это вес ребра из вершины i в вершину j.")
print("На главной диагонали всегда нули.\n")

dist = []
for i in range(N):
    row = list(map(int, input(f"Строка {i+1}: ").split()))
    if len(row) != N:
        print("Ошибка: в строке должно быть", N, "чисел.")
        exit()
    dist.append(row)

for k in range(N):
    for i in range(N):
        for j in range(N):
            if dist[i][k] + dist[k][j] < dist[i][j]:
                dist[i][j] = dist[i][k] + dist[k][j]

k_idx = K - 1
m_idx = M - 1
for v in range(N):
    if dist[v][v] < 0 and dist[k_idx][v] < INF and dist[v][m_idx] < INF:
        print("\nПуть имеет отрицательный цикл. Его длина может быть сколь угодно малой (-INF).")
        break
else:
    result = dist[k_idx][m_idx]
    print(f"\nДлина кратчайшего пути из вершины {K} в вершину {M}: {result}")

'''
 K: 1
 M: 3
 N: 3

Строка 1: 0 2 5
Строка 2: 2 0 1
Строка 3: 5 1 0

K = 1
M = 3
N = 3

Строка 1: 0 -2 4
Строка 2: 1 0 3
Строка 3: 2 -1 0

K = 1
M = 4
N = 4

Строка 1: 0 1 10 100
Строка 2: 1 0 1 100
Строка 3: 10 1 0 1
Строка 4: 100 100 1 0

K = 1
M = 3
N = 3

Строка 1: 0 1 10
Строка 2: -2 0 3
Строка 3: 4 -5 0

K = 2
M = 3
N = 3

Строка 1: 0 5 1
Строка 2: 2 0 2
Строка 3: 5 1 0

'''
